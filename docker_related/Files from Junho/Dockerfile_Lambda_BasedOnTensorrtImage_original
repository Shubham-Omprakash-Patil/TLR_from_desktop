FROM nvcr.io/nvidia/tensorrt:21.09-py3
# FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu20.04
# FROM nvidia/cuda:11.4.2-devel-ubuntu20.04

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -y update && \
    apt-get install -y --no-install-recommends \
        apt-utils \
        htop \
        qt5-default \
        ffmpeg \
        libnvidia-compute-470-server \
        libnvidia-decode-470-server \
        libnvidia-encode-470-server \
    && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN apt-get -y update && \
    apt-get install -y --no-install-recommends locales \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
    && export LANG=en_US.UTF-8

# Install ROS Package Keys
RUN apt-get -y update && \
    apt-get install -y --no-install-recommends \
        curl gnupg2 apt-transport-https gnupg ca-certificates lsb-release \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get -y update && \
    apt-get install -y --no-install-recommends ros-foxy-desktop \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN apt-get -y update && \
    apt-get install -y --no-install-recommends \
        python3.8-dev \
        python3-colcon-common-extensions \
        python3-vcstool \
        python3-rosdep \
    && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && python3 -m pip install -U --no-cache-dir pip distro\
    && python3 -m pip install -U --no-cache-dir cmake

RUN python3 -m pip install -U --no-cache-dir torch==1.10.2+cu113 torchvision==0.11.3+cu113 torchaudio==0.10.2+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html
# RUN python3 -m pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu114

RUN apt-get -y update && \
    apt-get install -y --no-install-recommends \
        iproute2 \
        xorg-dev \
        can-utils \
        wget \
        unzip \
        git \
        protobuf-compiler \
        python3-tk \
    && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && python3 -m pip install -U --no-cache-dir \
        pygments \
        ipykernel \
        numba \
        msgpack \
        msgpack-numpy \
        scipy \
        cantools \
        python-can \
        jupyterlab \
        remi \
        PySimpleGUIWeb \
        ray[default] \
        torchsummary \
        tensorboard \
        torchviz \
        python-dateutil \
        imageio \
        tqdm \
        ipywidgets \
        timm \
        pandas \
        hydra-core \
        albumentations>=1.1.0 \
        efficientnet_pytorch>=0.7.1 \
        prefetch_generator>=1.0.1 \
        pretrainedmodels>=0.7.4 \
        seaborn>=0.11.2 \
        tensorboardX>=2.4.1 \
        tqdm>=4.61.2 \
        webcolors>=1.11.1

RUN python3 -m pip uninstall -y opencv-python-headless && \
    apt-get -y update && \
    apt-get install -y --no-install-recommends \
        python3-opencv \
    && apt-get -y upgrade \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean 

# RUN python3 -m pip install -U --no-cache-dir \
        # tensorflow==2.8.0

# RUN python3 -m pip install -U --no-cache-dir \
#         PyYAML

# Configure Enviroment for ROS
RUN echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc
RUN mkdir -p /home/junho/py_ws && echo "source /home/junho/py_ws/startup.bash" >> ~/.bashrc